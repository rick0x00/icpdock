<VirtualHost *:80>
	ServerName SITE_NAME.SITE_DOMAIN
    ServerAlias *.SITE_NAME.SITE_DOMAIN
	ServerAdmin sysadmin@.SITE_DOMAIN

    Redirect permanent / https://SITE_NAME.SITE_DOMAIN/

	ErrorLog ${APACHE_LOG_DIR}/SITE_NAME.SITE_DOMAIN_error.log
	CustomLog ${APACHE_LOG_DIR}/SITE_NAME.SITE_DOMAIN_access.log combined

</VirtualHost>

<VirtualHost *:443>

	ServerName SITE_NAME.SITE_DOMAIN
    ServerAlias *.SITE_NAME.SITE_DOMAIN

	ServerAdmin sysadmin@.SITE_DOMAIN

    DocumentRoot /var/www/wordpress/xpto

	ErrorLog ${APACHE_LOG_DIR}/SITE_NAME.SITE_DOMAIN_error.log
	CustomLog ${APACHE_LOG_DIR}/SITE_NAME.SITE_DOMAIN_access.log combined


    <Directory "/var/www/wordpress/xpto">
            # Allow only symbolic links and disable directives in .htaccess
            Options -Indexes +FollowSymLinks 
            AllowOverride None
            Require all granted
    </Directory>

    # php-fpm fast-cgi
    ProxyPassMatch ^/(.*\.php)$ fcgi://wordpress:9000/var/www/wordpress/xpto/$1 enablereuse=on retry=0 timeout=300

    # Restrict request
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} !^(GET|POST|HEAD)$
    RewriteRule .* - [R=405,L]
        
    # # Necessary WebSocket
    # RewriteEngine On
    # RewriteCond %{HTTP:Upgrade} websocket [NC]
    # RewriteCond %{HTTP:Connection} upgrade [NC]
    # RewriteRule .* ws://xpto-apache:9000%{REQUEST_URI} [P,L]

    ## = Blocks .htaccess and similar files
    <FilesMatch "^\.ht">
        Require all denied
    </FilesMatch>

    ## = Defines headers
    <FilesMatch "\.(eot|ttf|woff|woff2)$">
        Header set Access-Control-Allow-Origin "*"
    </FilesMatch>

    ## = Sets cache for CSS, JS, and similar files
    <FilesMatch "\.(css|htc|less|js|js2|js3|js4)$">
        ExpiresActive On
        ExpiresDefault "access plus 10000 seconds"
        Header set Pragma "public"
        Header set Cache-Control "max-age=36000, public"
    </FilesMatch>

    ## = Sets cache for HTML, TXT, and XML files
    <FilesMatch "\.(html|htm|rtf|rtx|txt|xsd|xsl|xml)$">
        ExpiresActive On
        ExpiresDefault "access plus 3600 seconds"
        Header set Pragma "public"
        Header set Cache-Control "max-age=3600, public"
    </FilesMatch>

    ## = Sets cache for various file formats
    <FilesMatch "\.(asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|eot|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|webp|json|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|otf|_otf|odb|odc|odf|odg|odp|ods|odt|ogg|pdf|png|pot|pps|ppt|pptx|ra|ram|svg|svgz|swf|tar|tif|tiff|ttf|ttc|_ttf|wav|wma|wri|woff|woff2|xla|xls|xlsx|xlt|xlw|zip)$">
        ExpiresActive On
        ExpiresDefault "access plus 100000 seconds"
        Header set Pragma "public"
        Header set Cache-Control "max-age=360000, public"
    </FilesMatch>



    ## = Security to prevent PHP script execution in the uploads folder
    <Directory "/var/www/wordpress/xpto/wp-content/uploads">
        <FilesMatch "\.(php|php[0-9])$">
            Require all denied
        </FilesMatch>
        Options -ExecCGI
    </Directory>


    ## = Protects the WordPress configuration file
    <Files wp-config.php>
        Require all denied
    </Files>

    ## = Blocks access to sensitive files
    <FilesMatch "(^\.ht|^wp-config\.php|^xmlrpc\.php|^readme\.html|^license\.txt)">
        Require all denied
    </FilesMatch>

    ## = Completely blocks .htaccess usage
    <Files ".htaccess">
        Require all denied
    </Files>

    ## = Blocks xmlrpc.php
    <Files xmlrpc.php>
        Require all denied
    </Files>

    ## = Sets an upload size limit (10MB)
    <Directory "/var/www/wordpress/xpto">
        LimitRequestBody 10485760
    </Directory>

    ## = Security against XSS and MIME sniffing attacks
    <IfModule mod_headers.c>
        Header always set X-XSS-Protection "1; mode=block"
        Header always set X-Content-Type-Options "nosniff"
    </IfModule>

    ## = CORS origin restriction
    <IfModule mod_headers.c>
        Header always set Access-Control-Allow-Origin "https://SITE_NAME.SITE_DOMAIN"
        Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    </IfModule>

    ## = Content Security Policy (CSP)
    <IfModule mod_headers.c>
        Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self'; font-src 'self'; frame-ancestors 'self'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests;"
    </IfModule>

    ## = Page framing control (X-Frame-Options)
    <IfModule mod_headers.c>
        Header always set X-Frame-Options "ALLOW-FROM https://SITE_NAME.SITE_DOMAIN"
    </IfModule>

    ## = Charset definition
    AddDefaultCharset UTF-8


    ## = Blocks sensitive parameters in wp-login.php URL
    <IfModule mod_rewrite.c>
        RewriteEngine On
        RewriteCond %{QUERY_STRING} csrf_token|log|pwd [NC]
        RewriteRule ^wp-login.php$ - [F,L]
    </IfModule>

    ## = Cache control
    <IfModule mod_headers.c>
        Header always set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
    </IfModule>

    ## =  Secure cookie configuration
    <IfModule mod_headers.c>
        Header edit Set-Cookie ^(.*)$ "$1; Secure; HttpOnly; SameSite=Lax"
    </IfModule>

    ## =  Block suspicious User Agents (fuzzers and bots)
    <IfModule mod_rewrite.c>
        RewriteCond %{HTTP_USER_AGENT} (fuzzer|spider) [NC]
        RewriteRule .* - [F,L]
    </IfModule>

    ## =  Strict-Transport-Security (HSTS) configuration
    <IfModule mod_headers.c>
        Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    </IfModule>



    ### Redirecting to SSL site

    SSLEngine on
    SSLCertificateKeyFile   /etc/ssl/private/apache-selfsigned.key
    SSLCertificateFile      /etc/ssl/certs/apache-selfsigned.crt

    # disable old insecure protocols
    #SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
    
    # Enhance cypher suites
    #SSLHonorCipherOrder     on
    #SSLCipherSuite          ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
    
    ## Disable SSL compression
    #SSLCompression          off

    # Enable HTTP Strict Transport Security (HSTS)
    #SSLOptions              +StrictRequire


</VirtualHost>

