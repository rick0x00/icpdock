
# redirect all invalid hosts to correct host
# server {
#         listen 80;
#         listen [::]:80;

#         #listen 443 ssl;
#         #listen [::]:443 ssl;
        
# 	    server_name ~^(.*)\.hostname\.domain\.com\.br$;

#         ### configurando SSL
#         #include /etc/nginx/security/ssl-domain.com.br;

#         # redirecionando HTTP para HTTPS
#         return 301 https://hostname.domain.tld$request_uri;
# }


# redirect all HTTPS to HTTPS
# server {
#         listen 80;
#         listen [::]:80;
        
# 	    server_name hostname.domain.tld;

#         # redirecionando HTTP para HTTPS
#         return 301 https://hostname.domain.tld$request_uri;
# }


# 
server {
    listen 80;
    listen [::]:80;

    #listen 443 ssl;
    #listen [::]:443 ssl;

    #server_name hostname.domain.tld;
    
    ### configurando SSL
    #include /etc/nginx/security/ssl-domain.com.br.conf;


        location / {
            proxy_pass http://hostname;


            # https://www.nginx.com/resources/wiki/start/topics/examples/forwarded/
            # https://www.nginx.com/resources/wiki/start/topics/examples/likeapache/

            proxy_set_header Host $http_host;
            #  “Host” request header

            proxy_set_header X-Real-IP $remote_addr;
            # $remote_addr="client address"

            proxy_set_header X-Forwarded-Host $host:$server_port;
            # destination host of the server

            #proxy_set_header X-Forwarded-Server $host;
			
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # source address of client
        }
}