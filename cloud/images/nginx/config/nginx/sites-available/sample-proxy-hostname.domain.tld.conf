
# redirect all invalid hosts to correct host
# server {
#         listen 80;
#         listen [::]:80;

#         #listen 443 ssl;
#         #listen [::]:443 ssl;
        
# 	    server_name ~^(.*)\.hostname\.domain\.com\.br$;

#         ### configurando SSL
#         #include /etc/nginx/security/ssl-domain.com.br;

#         # redirecionando HTTP para HTTPS
#         return 301 https://hostname.domain.tld$request_uri;
# }


# redirect all HTTPS to HTTPS
# server {
#         listen 80;
#         listen [::]:80;
        
# 	    server_name hostname.domain.tld;

#         # redirecionando HTTP para HTTPS
#         return 301 https://hostname.domain.tld$request_uri;
# }

# Websocket
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}


# 
server {
    listen 80;
    listen [::]:80;

    #listen 443 ssl http2;
    #listen [::]:443 ssl http2;

    #server_name hostname.domain.tld;
    
    ### configurando SSL
    #include /etc/nginx/security/ssl-domain.com.br.conf;


    location / {
        proxy_pass http://hostname;


        # https://www.nginx.com/resources/wiki/start/topics/examples/forwarded/
        # https://www.nginx.com/resources/wiki/start/topics/examples/likeapache/

        #proxy_set_header Host $http_host;
        #  “Host” request header

        #proxy_set_header X-Real-IP $remote_addr;
        # $remote_addr="client address"

        #proxy_set_header X-Forwarded-Host $host:$server_port;
        # destination host of the server

        #proxy_set_header X-Forwarded-Server $host;
        
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # source address of client

        #proxy_set_header X-Forwarded-Proto $scheme;

        #####################################3
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Host $host;

        client_body_buffer_size 512k;
        proxy_read_timeout 86400s;
        client_max_body_size 0;

        # Websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

    }
}