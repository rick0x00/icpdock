# Mapping for WebSocket
map $http_upgrade $connection_upgrade {
    default "";
    "websocket" "upgrade";
}

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=60m;


server {
    listen 80;
    listen [::]:80;

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    set $site_host "host.domain.tld";

    server_name  host.domain.tld ~^(.*)\.host\.domain\.tld$;

    access_log      /var/log/nginx/host.domain.tld_access.log;
    error_log       /var/log/nginx/host.domain.tld_error.log;


    # SSL configuration
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    # If the request is via HTTP, redirect to HTTPS with the correct domain
    if ($scheme = http) {
        return 301 https://$site_host$request_uri;
    }

    # If the host is not exactly "example.com", redirect to the correct domain
    if ($host != $site_host) {
        return 301 https://$site_host$request_uri;
    }

    # Restrict request
    if ($request_method !~ ^(GET|POST|HEAD)$) {
        return 405;
    }

    # Configuration for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        try_files $uri =404;
    }

    location @default_proxy {
        proxy_pass https://apache;

        # Forwarding HTTP headers
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Host $host;

        # Buffer and timeout settings
        client_body_buffer_size 512k;
        proxy_read_timeout 60s;
        client_max_body_size 50M;

        proxy_http_version 1.1;

        add_header X-Cache-Status $upstream_cache_status;

        # Protection against HTTP request smuggling
        proxy_set_header Connection $connection_upgrade;
        # Necessary WebSocket headers
        proxy_set_header Upgrade $http_upgrade;

        # Proxy SSL settings
        #proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_ssl_name $host;

        # Hiding sensitive headers
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        proxy_hide_header X-AspNet-Version;
        proxy_hide_header X-AspNetMvc-Version;

        proxy_cache STATIC;
        proxy_cache_valid 200 30m;
        proxy_cache_valid 404 1m;
    }

    # I'm a teapot
    error_page 418 = @default_proxy;

    location / {
        # Default internal redirection to @default_proxy
        return 418;
    }

    # = Blocks .htaccess and similar files
    location ~ /\.ht {
        deny all;
    }

    # = Defines headers
    location ~* \.(eot|ttf|woff|woff2)$ {
        add_header Access-Control-Allow-Origin "*";
        return 418;
    }

    # = Sets cache for CSS, JS, and similar files
    location ~ \.(css|htc|less|js|js2|js3|js4)$ {
        expires 36000s;
        add_header Pragma "public";
        add_header Cache-Control "max-age=36000, public";
        return 418;
    }

    # = Sets cache for HTML, TXT, and XML files
    location ~ \.(html|htm|rtf|rtx|txt|xsd|xsl|xml)$ {
        expires 3600s;
        add_header Pragma "public";
        add_header Cache-Control "max-age=3600, public";
        return 418;
    }

    # = Sets cache for various file formats
    location ~ \.(asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|eot|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|webp|json|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|otf|_otf|odb|odc|odf|odg|odp|ods|odt|ogg|pdf|png|pot|pps|ppt|pptx|ra|ram|svg|svgz|swf|tar|tif|tiff|ttf|ttc|_ttf|wav|wma|wri|woff|woff2|xla|xls|xlsx|xlt|xlw|zip)$ {
        expires 360000s;
        add_header Pragma "public";
        add_header Cache-Control "max-age=360000, public";
        return 418;
    }

    # = Security to prevent PHP script execution in the uploads folder
    location ~* /wp-content/uploads/.*\.(php|php[0-9])$ {
        deny all;
    }

    # = Protects the WordPress configuration file
    location = /wp-config.php {
        deny all;
    }

    # = Blocks access to sensitive files
    location ~* (^/\.ht|^/wp-config\.php|^/xmlrpc\.php|^/readme\.html|^/license\.txt) {
        deny all;
    }

    # = Completely blocks .htaccess usage
    location = /.htaccess {
        deny all;
    }

    # = Blocks xmlrpc.php
    location = /xmlrpc.php {
        deny all;
    }

    # = Sets an upload size limit (10MB)
    client_max_body_size 10M;

    # = Security against XSS and MIME sniffing attacks
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;

    # = CORS origin restriction
    add_header Access-Control-Allow-Origin "https://$site_host";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";

    # = Content Security Policy (CSP)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self'; font-src 'self'; frame-ancestors 'self'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests;" always;

    # = Page framing control (X-Frame-Options)
    add_header X-Frame-Options "ALLOW-FROM https://$site_host" always;

    # = Charset definition
    charset utf-8;

    # = Blocks sensitive parameters in wp-login.php URL
    location /wp-login.php {
        if ($query_string ~ "(csrf_token|^log$|pwd)") {
            return 403;
        }
        return 418;
    }

    # = Cache control
    add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";

    # =  Secure cookie configuration
    add_header Set-Cookie "name=value; Secure; HttpOnly; SameSite=Strict";

    # =  Block suspicious User Agents (fuzzers and bots)
    if ($http_user_agent ~* "(fuzzer|spider)") {
        return 403;
    }

    # =  Strict-Transport-Security (HSTS) configuration
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

}
