
# redirect all invalid hosts to correct host
# server {
#         listen 80;
#         listen [::]:80;

#         #listen 443 ssl;
#         #listen [::]:443 ssl;
        
# 	    server_name ~^(.*)\.hostname\.domain\.com\.br$;

#         ### configurando SSL
#         #include /etc/nginx/snippets/ssl-domain.com.br;

#         # redirecionando HTTP para HTTPS
#         return 301 https://hostname.domain.tld$request_uri;
# }


# redirect all HTTPS to HTTPS
# server {
#         listen 80;
#         listen [::]:80;
        
# 	    server_name hostname.domain.tld;

#         # redirecionando HTTP para HTTPS
#         return 301 https://hostname.domain.tld$request_uri;
# }

# Websocket
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}


# 
server {
    listen 80;
    listen [::]:80;

    #listen 443 ssl http2;
    #listen [::]:443 ssl http2;

    #server_name hostname.domain.tld;
    
    ### configurando SSL
    #include /etc/nginx/snippets/ssl-domain.com.br.conf;
    #include snippets/self-signed.conf;
    #include snippets/ssl-params.conf;

    # Path to the WordPress installation
    set $wordpress_root /custom/path/to/wordpress;
    root $wordpress_root;

    index index.php index.html index.htm;

    # Allow only GET and HEAD by default
    if ($request_method !~ ^(GET|HEAD)$) {
        return 405;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # WordPress cache rules
    location ~* /wp-content/cache/.*$ {
        expires max;
        access_log off;
    }

    # PHP-FPM configuration
    location ~ \.php$ {
        include fastcgi_params;

        # Use PHP-FPM over the network
        fastcgi_pass wordpress:9000;

        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $wordpress_root$fastcgi_script_name;

        # Restrict PHP access to specific directories
        fastcgi_param PHP_ADMIN_VALUE "open_basedir=$wordpress_root:/tmp";

        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
    }


    # Static file caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires max;
        log_not_found off;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Advanced security rules
    location = /xmlrpc.php { 
        deny all;
    }
    location ~* /wp-config.php {
        deny all;
    }
    location ~* /(wp-admin|wp-includes)/.*\.php$ { 
        deny all; 
    }
    location ~* /\.ht {
        deny all;
    }
    location ~* /\.git {
        deny all;
    }

    # Block suspicious file extensions
    location ~* \.(bak|old|sql|tar|zip|tgz|rar|log)$ { deny all; }

    # Upload size limit
    client_max_body_size 64M;

    # Additional security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:";

    # Logging
    access_log /var/log/nginx/wordpress_access.log;
    error_log /var/log/nginx/wordpress_error.log;
}